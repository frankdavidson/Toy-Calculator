li $t0, 			#load ASCII value of + sign
beq $t0, $a2, add		#branch to add function
nop

li $t0, 			#load ASCII value of - sign
beq $t0, $a2, subtract	#branch to subtraction function
nop

li $t0, 			#load ASCII value of * sign
beq $t0, $a2, multiply	#branch to multiplication function
nop

li $t0, 			#load ASCII value of / sign
beq $t0, $a2, divide		#branch to division function
nop

#Math Operations

add:
	addu $v0, $a0, $a1	#$a0 + $a1, store result in $v0
	j err_check	#overflow
nop

subtract:
	subu $v0, $a0, $a1	#$a0 - $a1, store result in $v0
	j err_check #underflow
nop

multiply:
	mullo $v0, $a0, $a1	#$a0 * $a1, store result in $v0
	j err_check #overflow
nop

divide:
  j err_check #divide by zero error
  j err_check #overflow/ underflow
nop


